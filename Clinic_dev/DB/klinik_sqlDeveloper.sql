--------------------------------------------------------
--  File created - Monday-November-02-2020   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence CS_ACTION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "KLINIK"."CS_ACTION_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CS_ANAMNESA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "KLINIK"."CS_ANAMNESA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CS_BIRTH_CER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "KLINIK"."CS_BIRTH_CER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CS_CALL_LOG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "KLINIK"."CS_CALL_LOG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CS_DIAGNOSA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "KLINIK"."CS_DIAGNOSA_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CS_DIAG_CAT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "KLINIK"."CS_DIAG_CAT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CS_MEDTRANS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "KLINIK"."CS_MEDTRANS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CS_MED_CD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "KLINIK"."CS_MED_CD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CS_OBS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "KLINIK"."CS_OBS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CS_RECEIPT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "KLINIK"."CS_RECEIPT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CS_RECOM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "KLINIK"."CS_RECOM_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CS_REFER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "KLINIK"."CS_REFER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CS_SICK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "KLINIK"."CS_SICK_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CS_UPLOAD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "KLINIK"."CS_UPLOAD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table CS_ACTION
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_ACTION" 
   (	"ACT_ID" NUMBER, 
	"RM_NO" VARCHAR2(20 BYTE), 
	"INSP_DATE" DATE, 
	"ACT_NAME" VARCHAR2(200 BYTE), 
	"ACT_TYPE" VARCHAR2(20 BYTE), 
	"ACT_REMARK" VARCHAR2(200 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"VISIT_NO" VARCHAR2(10 BYTE), 
	"UPD_EMP" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_ADD_INFO
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_ADD_INFO" 
   (	"INFO_CD" VARCHAR2(10 BYTE), 
	"POLI_CD" VARCHAR2(10 BYTE), 
	"DESCRIPTION" VARCHAR2(50 BYTE), 
	"INS_DATE" DATE, 
	"STATUS" VARCHAR2(1 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_ANAMNESA
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_ANAMNESA" 
   (	"ANAMNESA_ID" NUMBER, 
	"RM_NO" VARCHAR2(20 BYTE), 
	"INSP_DATE" DATE, 
	"BLOOD_PRESS" VARCHAR2(10 BYTE), 
	"PULSE" VARCHAR2(10 BYTE), 
	"TEMPERATURE" VARCHAR2(10 BYTE), 
	"ALLERGY" VARCHAR2(100 BYTE), 
	"ANAMNESA" VARCHAR2(300 BYTE), 
	"DISEASE_NOW" VARCHAR2(300 BYTE), 
	"DISEASE_THEN" VARCHAR2(300 BYTE), 
	"DISEASE_FAMILY" VARCHAR2(300 BYTE), 
	"ANAMNESA_PHYSICAL" VARCHAR2(300 BYTE), 
	"ANAMNESA_OTHER" VARCHAR2(250 BYTE), 
	"BB" VARCHAR2(10 BYTE), 
	"TB" VARCHAR2(10 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"VISIT_NO" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE), 
	"INFO_K" VARCHAR2(10 BYTE), 
	"INFOP1" VARCHAR2(20 BYTE), 
	"INFOP2" VARCHAR2(20 BYTE), 
	"INFOP3" VARCHAR2(20 BYTE), 
	"INFOP4" VARCHAR2(20 BYTE), 
	"INFOP5" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_AUDIOMETRI
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_AUDIOMETRI" 
   (	"MCU_NO" VARCHAR2(20 BYTE), 
	"EMPID" VARCHAR2(10 BYTE), 
	"PERIODE" VARCHAR2(4 BYTE), 
	"MCU_DATE" DATE, 
	"PAKET" VARCHAR2(50 BYTE), 
	"KN250" NUMBER, 
	"KN500" NUMBER, 
	"KN1000" NUMBER, 
	"KN2000" NUMBER, 
	"KN3000" NUMBER, 
	"KN4000" NUMBER, 
	"KN6000" NUMBER, 
	"KN8000" NUMBER, 
	"KR250" NUMBER, 
	"KR500" NUMBER, 
	"KR1000" NUMBER, 
	"KR2000" NUMBER, 
	"KR3000" NUMBER, 
	"KR4000" NUMBER, 
	"KR6000" NUMBER, 
	"KR8000" NUMBER, 
	"KESAN_KN" VARCHAR2(250 BYTE), 
	"KESAN_KR" VARCHAR2(250 BYTE), 
	"KESIMP" VARCHAR2(500 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_BIRTH_CERTIFICATE
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_BIRTH_CERTIFICATE" 
   (	"CER_ID" NUMBER, 
	"RM_NO" VARCHAR2(20 BYTE), 
	"INSP_DATE" DATE, 
	"VISIT_NO" VARCHAR2(10 BYTE), 
	"LETTER_DT" DATE, 
	"LETTER_NO" VARCHAR2(50 BYTE), 
	"BIRTH_WEEK" VARCHAR2(10 BYTE), 
	"BIRTH_DATE" DATE, 
	"CNT_LEAVE" VARCHAR2(10 BYTE), 
	"BGN_DATE" DATE, 
	"END_DATE" DATE, 
	"BGN_WORK" DATE, 
	"CER_TYPE" VARCHAR2(1 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_CALL_LOG
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_CALL_LOG" 
   (	"CALL_ID" NUMBER, 
	"QUE" VARCHAR2(5 BYTE), 
	"TYPE_INS" VARCHAR2(5 BYTE), 
	"STAT" VARCHAR2(30 BYTE), 
	"PARAM" VARCHAR2(200 BYTE), 
	"FLAG" VARCHAR2(1 BYTE), 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"INS_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_DIAGNOSA
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_DIAGNOSA" 
   (	"DIAGNOSA_ID" NUMBER, 
	"RM_NO" VARCHAR2(20 BYTE), 
	"INSP_DATE" DATE, 
	"ITEM_CD" VARCHAR2(10 BYTE), 
	"TYPE_DIAGNOSA" VARCHAR2(10 BYTE), 
	"REMARK" VARCHAR2(100 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"VISIT_NO" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE), 
	"NOTED" VARCHAR2(100 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_DIAGNOSA_CATEGORY
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_DIAGNOSA_CATEGORY" 
   (	"CAT_ID" VARCHAR2(10 BYTE), 
	"CAT_NAME" VARCHAR2(100 BYTE), 
	"STATUS" VARCHAR2(1 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_DIAGNOSA_ITEM
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_DIAGNOSA_ITEM" 
   (	"ITEM_CD" VARCHAR2(10 BYTE), 
	"ITEM_NAME" VARCHAR2(250 BYTE), 
	"STATUS" VARCHAR2(1 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"CAT_ID" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_EMPLOYEES
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_EMPLOYEES" 
   (	"EMPID" VARCHAR2(20 CHAR), 
	"RFID" VARCHAR2(30 CHAR), 
	"NAME" VARCHAR2(150 CHAR), 
	"DEPT" VARCHAR2(50 CHAR), 
	"LINE" VARCHAR2(200 CHAR), 
	"POSITION" VARCHAR2(50 CHAR), 
	"MANAGER" VARCHAR2(150 CHAR), 
	"BIRTH_PLACE" VARCHAR2(50 BYTE), 
	"BIRTH_DATE" VARCHAR2(10 BYTE), 
	"AGE" NUMBER, 
	"GENDER" VARCHAR2(20 BYTE), 
	"ADDRESS" VARCHAR2(500 CHAR), 
	"BLOOD_TYPE" VARCHAR2(10 CHAR), 
	"HEIGHT" NUMBER, 
	"WEIGHT" NUMBER, 
	"RETIRE_DT" DATE, 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 CHAR), 
	"DEPTCD" VARCHAR2(10 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_MCU
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_MCU" 
   (	"MCU_NO" VARCHAR2(20 BYTE), 
	"EMPID" VARCHAR2(10 BYTE), 
	"PERIODE" VARCHAR2(4 BYTE), 
	"MCU_DATE" DATE, 
	"EMP_STAT" VARCHAR2(1 BYTE), 
	"PAKET" VARCHAR2(50 BYTE), 
	"KESIMP" VARCHAR2(500 BYTE), 
	"STATUS" VARCHAR2(200 BYTE), 
	"RIWAYAT" VARCHAR2(400 BYTE), 
	"TB" VARCHAR2(10 BYTE), 
	"BB" VARCHAR2(10 BYTE), 
	"TENSI" VARCHAR2(10 BYTE), 
	"VISUSKN" VARCHAR2(150 BYTE), 
	"VISUSKR" VARCHAR2(150 BYTE), 
	"BUTAWARNA" VARCHAR2(20 BYTE), 
	"KSMFISIK" VARCHAR2(400 BYTE), 
	"LABSMUA" VARCHAR2(400 BYTE), 
	"LABHEMA" VARCHAR2(400 BYTE), 
	"LABKIMIA" VARCHAR2(400 BYTE), 
	"LABURINE" VARCHAR2(400 BYTE), 
	"RONTGEN" VARCHAR2(400 BYTE), 
	"JANTUNG" VARCHAR2(400 BYTE), 
	"AUDIO" VARCHAR2(400 BYTE), 
	"SPIRO" VARCHAR2(400 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE), 
	"BMI" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_MEDICINE
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_MEDICINE" 
   (	"MED_CD" VARCHAR2(10 BYTE), 
	"MED_NAME" VARCHAR2(50 BYTE), 
	"MED_GROUP" VARCHAR2(50 BYTE), 
	"STATUS" VARCHAR2(2 BYTE), 
	"STOCK" NUMBER, 
	"UOM" VARCHAR2(20 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE), 
	"TRANS_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_MEDICINE_STOK
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_MEDICINE_STOK" 
   (	"PERIOD" VARCHAR2(10 BYTE), 
	"MED_CD" VARCHAR2(10 BYTE), 
	"STOCK" NUMBER, 
	"EXPIRE_DATE" DATE, 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_MEDICINE_STOK_TMP
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_MEDICINE_STOK_TMP" 
   (	"PERIOD" VARCHAR2(10 BYTE), 
	"MED_CD" VARCHAR2(10 BYTE), 
	"STOCK" NUMBER, 
	"EXPIRE_DATE" DATE, 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_MEDICINE_TRANS
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_MEDICINE_TRANS" 
   (	"TRANS_ID" NUMBER, 
	"MED_CD" VARCHAR2(10 BYTE), 
	"TRANS_TYPE" VARCHAR2(3 BYTE), 
	"TRANS_DATE" DATE, 
	"TRANS_QTY" NUMBER, 
	"BATCH_NO" VARCHAR2(30 BYTE), 
	"EXPIRE_DATE" DATE, 
	"TRANS_REMARK" VARCHAR2(30 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE), 
	"RECEIPT_ID" NUMBER, 
	"TRANS_CD" VARCHAR2(3 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_OBSERVATION
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_OBSERVATION" 
   (	"OBS_ID" NUMBER, 
	"RM_NO" VARCHAR2(20 BYTE), 
	"INSP_DATE" DATE, 
	"ROOM_CD" VARCHAR2(10 BYTE), 
	"BED_NO" NUMBER, 
	"OBS_START" DATE, 
	"OBS_END" DATE, 
	"OBS_REMARK" VARCHAR2(50 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"VISIT_NO" VARCHAR2(10 BYTE), 
	"HRS_CNT" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_PATIENT
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_PATIENT" 
   (	"RM_NO" VARCHAR2(20 BYTE), 
	"EMPID" VARCHAR2(10 BYTE), 
	"GROUP_PATIENT" VARCHAR2(10 BYTE), 
	"INFO01" VARCHAR2(100 BYTE), 
	"INFO02" VARCHAR2(100 BYTE), 
	"INFO03" VARCHAR2(100 BYTE), 
	"INFO04" VARCHAR2(100 BYTE), 
	"INFO05" VARCHAR2(100 BYTE), 
	"INFO06" VARCHAR2(100 BYTE), 
	"INFO07" VARCHAR2(100 BYTE), 
	"INFO08" VARCHAR2(100 BYTE), 
	"INFO09" VARCHAR2(100 BYTE), 
	"INFO10" VARCHAR2(100 BYTE), 
	"INFO11" VARCHAR2(100 BYTE), 
	"INFO12" VARCHAR2(100 BYTE), 
	"INFO13" VARCHAR2(100 BYTE), 
	"INFO14" VARCHAR2(100 BYTE), 
	"INFO15" VARCHAR2(100 BYTE), 
	"STATUS" VARCHAR2(10 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_POLICLINIC
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_POLICLINIC" 
   (	"POLI_CD" VARCHAR2(10 BYTE), 
	"POLI_NAME" VARCHAR2(50 BYTE), 
	"POLI_GROUP" VARCHAR2(10 BYTE), 
	"POLI_PIC" VARCHAR2(3 BYTE), 
	"STATUS" VARCHAR2(3 BYTE), 
	"INS_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_RECEIPT
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_RECEIPT" 
   (	"RECEIPT_ID" NUMBER, 
	"RM_NO" VARCHAR2(20 BYTE), 
	"INSP_DATE" DATE, 
	"MED_CD" VARCHAR2(10 BYTE), 
	"FORMULA" VARCHAR2(10 BYTE), 
	"MED_QTY" NUMBER, 
	"MED_REMARK" VARCHAR2(300 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE), 
	"VISIT_NO" VARCHAR2(10 BYTE), 
	"TYPE_DRINK" VARCHAR2(10 BYTE), 
	"CONFIRM" VARCHAR2(1 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_RECOMMENDATION
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_RECOMMENDATION" 
   (	"RECOM_ID" NUMBER, 
	"RM_NO" VARCHAR2(20 BYTE), 
	"INSP_DATE" DATE, 
	"POLI_CD" VARCHAR2(10 BYTE), 
	"RECOM_01" VARCHAR2(1 BYTE), 
	"RECOM_02" VARCHAR2(1 BYTE), 
	"RECOM_03" VARCHAR2(1 BYTE), 
	"RECOM_04" VARCHAR2(1 BYTE), 
	"RECOM_REMARK" VARCHAR2(200 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"VISIT_NO" VARCHAR2(10 BYTE), 
	"LETTER_NO" VARCHAR2(50 BYTE), 
	"LETTER_DT" DATE, 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_REFER
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_REFER" 
   (	"REFER_ID" NUMBER, 
	"RM_NO" VARCHAR2(20 BYTE), 
	"INSP_DATE" DATE, 
	"LETTER_DT" DATE, 
	"HOS_NAME" VARCHAR2(50 BYTE), 
	"HOS_DOC" VARCHAR2(50 BYTE), 
	"LETTER_NO" VARCHAR2(50 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"VISIT_NO" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_ROOM
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_ROOM" 
   (	"ROOM_ID" VARCHAR2(10 BYTE), 
	"ROOM_NAME" VARCHAR2(50 BYTE), 
	"BED_QTY" NUMBER, 
	"STATUS" VARCHAR2(10 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_SICK_LETER
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_SICK_LETER" 
   (	"LETTER_ID" NUMBER, 
	"RM_NO" VARCHAR2(20 BYTE), 
	"INSP_DATE" DATE, 
	"PRINT_YN" VARCHAR2(1 BYTE), 
	"VISIT_NO" VARCHAR2(10 BYTE), 
	"LETTER_DT" DATE, 
	"LETTER_NO" VARCHAR2(50 BYTE), 
	"RETURN_WORK" VARCHAR2(1 BYTE), 
	"CONTROL" DATE, 
	"BGN_REST" DATE, 
	"END_REST" DATE, 
	"CNT_REST" VARCHAR2(10 BYTE), 
	"BGN_LIMIT" DATE, 
	"END_LIMIT" DATE, 
	"CNT_LIMIT" VARCHAR2(10 BYTE), 
	"LIMIT01" VARCHAR2(10 BYTE), 
	"LIMIT02" VARCHAR2(10 BYTE), 
	"LIMIT03" VARCHAR2(10 BYTE), 
	"LIMIT04" VARCHAR2(10 BYTE), 
	"LIMIT05" VARCHAR2(10 BYTE), 
	"LIMIT06" VARCHAR2(10 BYTE), 
	"LIMIT07" VARCHAR2(10 BYTE), 
	"LIMIT08" VARCHAR2(10 BYTE), 
	"LIMIT09" VARCHAR2(10 BYTE), 
	"LIMIT10" VARCHAR2(10 BYTE), 
	"REMARK" VARCHAR2(100 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE), 
	"REMARK_MACHINE" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_SICK_LETER_ITEM
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_SICK_LETER_ITEM" 
   (	"ITEM_ID" VARCHAR2(10 BYTE), 
	"ITEM_NAME" VARCHAR2(50 BYTE), 
	"STATUS" VARCHAR2(1 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_UPLOAD
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_UPLOAD" 
   (	"A_V" VARCHAR2(250 BYTE), 
	"B_V" VARCHAR2(250 BYTE), 
	"C_V" VARCHAR2(250 BYTE), 
	"D_V" VARCHAR2(250 BYTE), 
	"E_V" VARCHAR2(250 BYTE), 
	"F_V" VARCHAR2(250 BYTE), 
	"G_V" VARCHAR2(250 BYTE), 
	"H_V" VARCHAR2(250 BYTE), 
	"I_V" VARCHAR2(250 BYTE), 
	"J_V" VARCHAR2(250 BYTE), 
	"K_V" VARCHAR2(250 BYTE), 
	"L_V" VARCHAR2(250 BYTE), 
	"M_V" VARCHAR2(250 BYTE), 
	"N_V" VARCHAR2(250 BYTE), 
	"O_V" VARCHAR2(600 BYTE), 
	"P_V" VARCHAR2(250 BYTE), 
	"Q_V" VARCHAR2(600 BYTE), 
	"R_V" VARCHAR2(250 BYTE), 
	"S_V" VARCHAR2(250 BYTE), 
	"T_V" VARCHAR2(250 BYTE), 
	"U_V" VARCHAR2(250 BYTE), 
	"V_V" VARCHAR2(250 BYTE), 
	"W_V" VARCHAR2(250 BYTE), 
	"X_V" VARCHAR2(250 BYTE), 
	"Y_V" VARCHAR2(250 BYTE), 
	"Z_V" VARCHAR2(250 BYTE), 
	"A_W" VARCHAR2(250 BYTE), 
	"B_W" VARCHAR2(250 BYTE), 
	"C_W" VARCHAR2(250 BYTE), 
	"D_W" VARCHAR2(250 BYTE), 
	"E_W" VARCHAR2(250 BYTE), 
	"F_W" VARCHAR2(250 BYTE), 
	"G_W" VARCHAR2(250 BYTE), 
	"H_W" VARCHAR2(250 BYTE), 
	"I_W" VARCHAR2(250 BYTE), 
	"J_W" VARCHAR2(250 BYTE), 
	"K_W" VARCHAR2(250 BYTE), 
	"L_W" VARCHAR2(250 BYTE), 
	"M_W" VARCHAR2(250 BYTE), 
	"N_W" VARCHAR2(250 BYTE), 
	"O_W" VARCHAR2(250 BYTE), 
	"P_W" VARCHAR2(250 BYTE), 
	"Q_W" VARCHAR2(250 BYTE), 
	"R_W" VARCHAR2(250 BYTE), 
	"S_W" VARCHAR2(250 BYTE), 
	"T_W" VARCHAR2(250 BYTE), 
	"U_W" VARCHAR2(250 BYTE), 
	"V_W" VARCHAR2(250 BYTE), 
	"W_W" VARCHAR2(250 BYTE), 
	"X_W" VARCHAR2(250 BYTE), 
	"Y_W" VARCHAR2(250 BYTE), 
	"Z_W" VARCHAR2(250 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_USER
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_USER" 
   (	"EMPID" VARCHAR2(20 BYTE), 
	"USER_ROLE" VARCHAR2(20 BYTE), 
	"STATUS" VARCHAR2(20 BYTE), 
	"INS_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table CS_VISIT
--------------------------------------------------------

  CREATE TABLE "KLINIK"."CS_VISIT" 
   (	"EMPID" VARCHAR2(10 BYTE), 
	"POLI_CD" VARCHAR2(10 BYTE), 
	"TYPE_PATIENT" VARCHAR2(1 BYTE), 
	"VISIT_DATE" DATE, 
	"TIME_RESERVATION" DATE, 
	"TIME_INSPECTION" DATE, 
	"TIME_RECEIPT" DATE, 
	"TIME_OBSERVATION" DATE, 
	"TIME_END" DATE, 
	"OBSERVATION" VARCHAR2(1 BYTE), 
	"STATUS" VARCHAR2(10 BYTE), 
	"VISIT_REMARK" VARCHAR2(50 BYTE), 
	"INS_DATE" DATE, 
	"INS_EMP" VARCHAR2(10 BYTE), 
	"UPD_DATE" DATE, 
	"UPD_EMP" VARCHAR2(10 BYTE), 
	"PURPOSE" VARCHAR2(3 BYTE), 
	"VISIT_CNT" VARCHAR2(3 BYTE), 
	"WORK_ACCIDENT" VARCHAR2(1 BYTE), 
	"QUE01" VARCHAR2(10 BYTE), 
	"QUE02" VARCHAR2(10 BYTE), 
	"START_HOLD" DATE, 
	"END_HOLD" DATE, 
	"TMP_STATUS" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for View CS_TRANS_MED_V
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "KLINIK"."CS_TRANS_MED_V" ("TRANS_DATE", "TRANS_TYPE", "MED_NAME", "TRANS_QTY", "TRANS_CD", "TRANS_REMARK", "BATCH_NO", "EXPIRE_DATE", "RECEIPT_ID", "RM_NO") AS 
  select trans_date, trans_type, initcap(med_name) med_name,
trans_qty, trans_cd, trans_remark, batch_no, expire_date, b.receipt_id, c.rm_no
from cs_medicine a
join cs_medicine_trans b on (a.med_cd=b.med_cd)
left join cs_receipt c on(b.receipt_id=c.receipt_id)
where a.status='A'
;
REM INSERTING into KLINIK.CS_ACTION
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_ADD_INFO
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_ANAMNESA
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_AUDIOMETRI
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_BIRTH_CERTIFICATE
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_CALL_LOG
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_DIAGNOSA
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_DIAGNOSA_CATEGORY
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_DIAGNOSA_ITEM
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_EMPLOYEES
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_MCU
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_MEDICINE
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_MEDICINE_STOK
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_MEDICINE_STOK_TMP
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_MEDICINE_TRANS
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_OBSERVATION
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_PATIENT
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_POLICLINIC
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_RECEIPT
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_RECOMMENDATION
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_REFER
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_ROOM
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_SICK_LETER
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_SICK_LETER_ITEM
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_UPLOAD
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_USER
SET DEFINE OFF;
REM INSERTING into KLINIK.CS_VISIT
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index CS_DIAG_CAT_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_DIAG_CAT_IDX_01" ON "KLINIK"."CS_DIAGNOSA_CATEGORY" ("CAT_ID", "STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_EMPLOYEES_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_EMPLOYEES_IDX_01" ON "KLINIK"."CS_EMPLOYEES" ("EMPID", "RFID", "NAME", "POSITION") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_REFER_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_REFER_IDX_01" ON "KLINIK"."CS_REFER" ("REFER_ID", "RM_NO", "INSP_DATE", "LETTER_DT", "VISIT_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_PATIENT_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_PATIENT_IDX_01" ON "KLINIK"."CS_PATIENT" ("RM_NO", "EMPID", "GROUP_PATIENT", "STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_ROOM_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_ROOM_IDX_01" ON "KLINIK"."CS_ROOM" ("ROOM_ID", "STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_MEDICINE_TRANS_IDX_02
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_MEDICINE_TRANS_IDX_02" ON "KLINIK"."CS_MEDICINE_TRANS" ("EXPIRE_DATE", "TRANS_CD") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_MEDICINE_TRANS_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_MEDICINE_TRANS_IDX_01" ON "KLINIK"."CS_MEDICINE_TRANS" ("TRANS_ID", "MED_CD", "TRANS_TYPE", "TRANS_DATE", "TRANS_QTY", "RECEIPT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_BIRTH_CERTI_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_BIRTH_CERTI_IDX_01" ON "KLINIK"."CS_BIRTH_CERTIFICATE" ("CER_ID", "RM_NO", "INSP_DATE", "VISIT_NO", "LETTER_DT", "LETTER_NO", "CER_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_POLICLINIC_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_POLICLINIC_IDX_01" ON "KLINIK"."CS_POLICLINIC" ("POLI_CD", "POLI_GROUP", "POLI_PIC", "STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_VISIT_U01
--------------------------------------------------------

  CREATE UNIQUE INDEX "KLINIK"."CS_VISIT_U01" ON "KLINIK"."CS_VISIT" ("EMPID", "VISIT_DATE", "QUE01") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_VISIT_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_VISIT_IDX_01" ON "KLINIK"."CS_VISIT" ("EMPID", "VISIT_DATE", "STATUS", "PURPOSE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_PATIENT_U01
--------------------------------------------------------

  CREATE UNIQUE INDEX "KLINIK"."CS_PATIENT_U01" ON "KLINIK"."CS_PATIENT" ("EMPID", "GROUP_PATIENT", "STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_AUDIOMETRI_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_AUDIOMETRI_IDX_01" ON "KLINIK"."CS_AUDIOMETRI" ("MCU_NO", "EMPID", "PERIODE", "MCU_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_DIAGNOSA_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_DIAGNOSA_IDX_01" ON "KLINIK"."CS_DIAGNOSA" ("DIAGNOSA_ID", "RM_NO", "INSP_DATE", "ITEM_CD", "TYPE_DIAGNOSA", "VISIT_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_SICK_LETER_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_SICK_LETER_IDX_01" ON "KLINIK"."CS_SICK_LETER" ("LETTER_ID", "RM_NO", "INSP_DATE", "VISIT_NO", "LETTER_DT", "LETTER_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_MCU_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_MCU_IDX_01" ON "KLINIK"."CS_MCU" ("MCU_NO", "EMPID", "PERIODE", "MCU_DATE", "EMP_STAT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_MEDICINE_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_MEDICINE_IDX_01" ON "KLINIK"."CS_MEDICINE" ("MED_CD", "STATUS", "UOM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_OBSERVATION_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_OBSERVATION_IDX_01" ON "KLINIK"."CS_OBSERVATION" ("OBS_ID", "RM_NO", "INSP_DATE", "ROOM_CD", "VISIT_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_RECOMM_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_RECOMM_IDX_01" ON "KLINIK"."CS_RECOMMENDATION" ("RECOM_ID", "RM_NO", "INSP_DATE", "POLI_CD", "VISIT_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_RECEIPT_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_RECEIPT_IDX_01" ON "KLINIK"."CS_RECEIPT" ("RECEIPT_ID", "RM_NO", "INSP_DATE", "MED_CD", "MED_QTY", "VISIT_NO", "CONFIRM") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_ANAMNESA_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_ANAMNESA_IDX_01" ON "KLINIK"."CS_ANAMNESA" ("ANAMNESA_ID", "RM_NO", "INSP_DATE", "VISIT_NO", "INFO_K") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_MEDICINE_STOK_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_MEDICINE_STOK_IDX_01" ON "KLINIK"."CS_MEDICINE_STOK" ("PERIOD", "MED_CD", "STOCK", "EXPIRE_DATE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_DIAG_ITEM_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_DIAG_ITEM_IDX_01" ON "KLINIK"."CS_DIAGNOSA_ITEM" ("ITEM_CD", "STATUS", "CAT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Index CS_ACTION_IDX_01
--------------------------------------------------------

  CREATE INDEX "KLINIK"."CS_ACTION_IDX_01" ON "KLINIK"."CS_ACTION" ("ACT_ID", "RM_NO", "INSP_DATE", "ACT_TYPE", "VISIT_NO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Procedure SP_CS_GEN_EMP
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "KLINIK"."SP_CS_GEN_EMP" 
AS

BEGIN
    null;
    /*
    DELETE FROM cs_employees;

    INSERT INTO cs_employees
       SELECT empid, rfid, replace(name,'''','') NAME, dept, line, POSITION, manager, birth_place,
              birth_date, age, gender, address, blood_type, height, weight,
              retire_dt, sysdate ins_date, 'SYSTEM' ins_emp, deptcd
         FROM tthcm.view_cl_emp@dl_ttergtotthcmif;

    COMMIT;
    */
EXCEPTION
   WHEN NO_DATA_FOUND THEN ROLLBACK;

END;

/
--------------------------------------------------------
--  DDL for Procedure SP_CS_GEN_INIT_STOK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "KLINIK"."SP_CS_GEN_INIT_STOK" 
AS

BEGIN
    /*
    delete from cs_medicine_stok_tmp;    

    DELETE FROM cs_medicine_stok where period = to_char(LAST_DAY(ADD_MONTHS(trunc(sysdate), -1)),'yyyymm');

    insert into cs_medicine_stok_tmp
    select to_char(LAST_DAY(ADD_MONTHS(trunc(sysdate), -1)),'yyyymm') period, 
    med_cd, stok, null expire_date, sysdate ins_date, 'SYSTEM' ins_emp,
    null upd_date, null upd_emp from (  
    select med_cd, 
    TTIT.FN_CS_INIT_STOCK(LAST_DAY(ADD_MONTHS(trunc(sysdate), -1)),med_cd) + 
    TTIT.FN_CS_TRX_IN(LAST_DAY(ADD_MONTHS(trunc(sysdate), -1)),med_cd) -  
    TTIT.FN_CS_TRX_OUT(LAST_DAY(ADD_MONTHS(trunc(sysdate), -1)),med_cd) -  
    TTIT.FN_CS_REQ_STOCK(LAST_DAY(ADD_MONTHS(trunc(sysdate), -1)),med_cd) as stok
    from cs_medicine ) a where 1=1 
    order by med_cd;

    insert into cs_medicine_stok 
    select * from cs_medicine_stok_tmp;

    COMMIT;
    */
    null;
EXCEPTION
   WHEN NO_DATA_FOUND THEN ROLLBACK;

END;

/
--------------------------------------------------------
--  DDL for Procedure SP_CS_GEN_PATIENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "KLINIK"."SP_CS_GEN_PATIENT" 
AS
BEGIN
   INSERT INTO cs_patient
      SELECT    'C'
             || REPLACE (empid, 'T', '')
             || TO_CHAR (SYSDATE, 'yymmdd') rm_no,
             empid, 'COMM', '', '', '', '', '', '', '', '', '', '', '', '',
             '', '', '', 'A' status, SYSDATE ins_date, 'TT17100003' ins_emp,
             '', ''
        FROM cs_employees a
       WHERE retire_dt IS NULL AND empid NOT IN (SELECT empid
                                                   FROM cs_patient);

   COMMIT;
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      ROLLBACK;
END;

/
--------------------------------------------------------
--  DDL for Function CS_CNT_DIAG
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."CS_CNT_DIAG" ( P_DATE VARCHAR2, P_DIAG VARCHAR2, P_PLANT VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
BEGIN  

     BEGIN

     select 0 INTO v_return_value from dual;

     /*
     SELECT COUNT (DISTINCT a.empid) 
       INTO v_return_value
       FROM cs_visit a JOIN cs_patient b ON (a.empid = b.empid)
            JOIN cs_diagnosa c
            ON (    TRUNC (a.visit_date) = c.insp_date
               AND b.rm_no = c.rm_no
               AND a.que01 = c.visit_no
               )
            JOIN cs_employees d ON (a.empid = d.empid)
            JOIN view_eam100_s1@dl_ttergtotthcmif e ON (d.deptcd = e.deptcd)
      WHERE b.status = 'A'
        AND a.status = 'CLS'
        AND poli_cd IN ('POL0000', 'POL0001')
        AND c.item_cd NOT IN ('X11')
        AND type_diagnosa = 'P'
        AND c.item_cd = P_DIAG
        AND plant = P_PLANT
        AND TO_CHAR (visit_date, 'yyyymm') = P_DATE;
        */

      EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
        END;

        RETURN v_return_value;

END CS_CNT_DIAG;

/
--------------------------------------------------------
--  DDL for Function CS_CNT_EMP_BY_DEPT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."CS_CNT_EMP_BY_DEPT" ( P_DEPT VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
BEGIN  

     BEGIN

     select 0 INTO v_return_value from dual ;

     /*
        SELECT COUNT (0)
          INTO v_return_value
          FROM cs_employees a JOIN view_eam100_s1@dl_ttergtotthcmif b
               ON (a.deptcd = b.deptcd)
         WHERE retire_dt IS NULL AND parent_dept = P_DEPT;
     */

      EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
        END;

        RETURN v_return_value;

END CS_CNT_EMP_BY_DEPT;

/
--------------------------------------------------------
--  DDL for Function CS_CNT_EMP_BY_PLANT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."CS_CNT_EMP_BY_PLANT" ( P_PLANT VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
BEGIN  

     BEGIN

     select 0 INTO v_return_value from dual;
     /*
        SELECT COUNT (0)
          INTO v_return_value
          FROM cs_employees a JOIN view_eam100_s1@dl_ttergtotthcmif b
               ON (a.deptcd = b.deptcd)
         WHERE retire_dt IS NULL AND plant = P_PLANT;
     */
      EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
        END;

        RETURN v_return_value;

END CS_CNT_EMP_BY_PLANT;

/
--------------------------------------------------------
--  DDL for Function CS_DAILY_WA
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."CS_DAILY_WA" ( P_DATE VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
BEGIN  

     BEGIN

        SELECT COUNT (0) 
          INTO v_return_value
          FROM cs_visit 
         WHERE 1 = 1 
           AND to_char(visit_date,'yyyy-mm-dd')=P_DATE
           AND work_accident='Y'
           AND status='CLS';

        EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
     END;

  RETURN v_return_value;

END CS_DAILY_WA;

/
--------------------------------------------------------
--  DDL for Function CS_GET_INFOK
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."CS_GET_INFOK" ( P_RM VARCHAR2, P_K VARCHAR2) RETURN DATE 
IS v_return_value DATE;
 BEGIN  
       BEGIN

        SELECT MAX (insp_date) ddate 
          INTO v_return_value
          FROM cs_anamnesa
         WHERE rm_no = P_RM AND info_k = P_K;

        EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := null;  
        END;

        RETURN v_return_value;

END CS_GET_INFOK;

/
--------------------------------------------------------
--  DDL for Function CS_KB_STATUS
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."CS_KB_STATUS" ( P_DATE VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
BEGIN  

     BEGIN
        SELECT COUNT (0) INTO v_return_value
          FROM cs_patient a
         WHERE 1 = 1
           AND group_patient = 'FAMP'
           AND TRUNC (ins_date) <= LAST_DAY (TO_DATE (P_DATE, 'yyyy-mm'));

      EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
        END;

        RETURN v_return_value;

END CS_KB_STATUS;

/
--------------------------------------------------------
--  DDL for Function CS_MON_VISIT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."CS_MON_VISIT" ( P_MONTH VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
BEGIN  

     BEGIN

        SELECT COUNT (distinct empid) 
          INTO v_return_value
          FROM cs_visit
         WHERE 1 = 1 
           AND to_char(visit_date,'yyyy-mm')=P_MONTH
           AND status='CLS';

        EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
     END;

  RETURN v_return_value;

END CS_MON_VISIT;

/
--------------------------------------------------------
--  DDL for Function CS_NEW_STATUS
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."CS_NEW_STATUS" ( P_TYPE VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
BEGIN  

    IF P_TYPE = 'PREG' THEN

       BEGIN
        SELECT COUNT (DISTINCT a.empid)
          INTO v_return_value
          FROM cs_visit a JOIN cs_patient b ON (a.empid = b.empid)
               JOIN cs_anamnesa c
               ON (    b.rm_no = c.rm_no
                   AND TRUNC (a.visit_date) = c.insp_date
                   AND a.que01 = c.visit_no
                  )
         WHERE TO_CHAR (visit_date, 'yyyy-mm') = TO_CHAR (SYSDATE, 'yyyy-mm')
           AND a.status = 'CLS'
           AND b.status = 'A'
           AND poli_cd = 'POL0002'
           AND group_patient = 'PREG'
           AND info_k = 'K1';

       EXCEPTION
            WHEN OTHERS THEN
                        v_return_value := 0;  
       END;

    ELSIF P_TYPE = 'FAMP' THEN

      BEGIN
       SELECT COUNT (DISTINCT a.empid)
         INTO v_return_value
         FROM cs_visit a JOIN cs_patient b ON (a.empid = b.empid)
        WHERE TO_CHAR (visit_date, 'yyyy-mm') = TO_CHAR (SYSDATE, 'yyyy-mm')
          AND a.status = 'CLS'
          AND b.status = 'A'
          AND poli_cd = 'POL0003'
          AND group_patient = 'FAMP';

      EXCEPTION
          WHEN OTHERS THEN
                      v_return_value := 0;  
      END;

    END IF;

    RETURN v_return_value;

END CS_NEW_STATUS;

/
--------------------------------------------------------
--  DDL for Function CS_PREG_STATUS
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."CS_PREG_STATUS" ( P_DATE VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
BEGIN  

     BEGIN
        SELECT COUNT (0) INTO v_return_value
          FROM (SELECT CASE
                          WHEN LAST_DAY (TO_DATE (P_DATE, 'yyyy-mm'))
                                 BETWEEN TO_DATE (info05, 'yyyy-mm-dd')
                                     AND TO_DATE (info09, 'yyyy-mm-dd')
                             THEN 'A'
                          ELSE 'I'
                       END as aktif
                  FROM cs_patient a
                 WHERE group_patient = 'PREG')
         WHERE aktif = 'A';

      EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
        END;

        RETURN v_return_value;

END CS_PREG_STATUS;

/
--------------------------------------------------------
--  DDL for Function CS_PREG_STATUS2
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."CS_PREG_STATUS2" ( P_DATE VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
BEGIN  

     BEGIN
        SELECT COUNT (0) INTO v_return_value
          FROM (SELECT CASE
                          WHEN TO_DATE (P_DATE, 'yyyy-mm-dd')
                                 BETWEEN TO_DATE (info05, 'yyyy-mm-dd')
                                     AND TO_DATE (info09, 'yyyy-mm-dd')
                             THEN 'A'
                          ELSE 'I'
                       END as aktif
                  FROM cs_patient a
                 WHERE group_patient = 'PREG')
         WHERE aktif = 'A';

      EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
        END;

        RETURN v_return_value;

END CS_PREG_STATUS2;

/
--------------------------------------------------------
--  DDL for Function CS_PROG_VISIT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."CS_PROG_VISIT" ( P_DATE VARCHAR2, P_PUR VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
BEGIN  

  IF P_PUR = '' OR P_PUR is null THEN

     BEGIN

        SELECT COUNT (0) 
          INTO v_return_value
          FROM cs_visit
         WHERE 1 = 1 
           AND to_char(visit_date,'yyyy-mm-dd')=P_DATE
           and status in ('PRE','RSV','INS','MED','OBS');

        EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
     END;

  ELSE

     BEGIN

        SELECT COUNT (0) 
          INTO v_return_value
          FROM cs_visit 
         WHERE 1 = 1 
           AND to_char(visit_date,'yyyy-mm-dd')=P_DATE
           and status in ('PRE','RSV','INS','MED','OBS')
           AND PURPOSE = P_PUR;

        EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
     END;

  END IF;

  RETURN v_return_value;

END CS_PROG_VISIT;

/
--------------------------------------------------------
--  DDL for Function CS_TOT_EMP
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."CS_TOT_EMP" ( P_GROUP VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
BEGIN  

  IF P_GROUP = 'ALL' THEN

       BEGIN

        SELECT COUNT (0) 
          INTO v_return_value
          FROM cs_employees a
         WHERE 1 = 1 
           AND retire_dt is null;

        EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
        END;

   ELSIF P_GROUP = 'LOCAL' THEN

       BEGIN

        SELECT COUNT (0) 
          INTO v_return_value
          FROM cs_employees a
         WHERE 1 = 1 
           AND retire_dt is null
           AND empid like 'TT%';

        EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
        END;

   ELSIF P_GROUP = 'EXP' THEN

       BEGIN

        SELECT COUNT (0) 
          INTO v_return_value
          FROM cs_employees a
         WHERE 1 = 1 
           AND retire_dt is null
           AND empid not like 'TT%';

        EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
        END;

    ELSE

    v_return_value := 0;

   END IF;


  RETURN v_return_value;

END CS_TOT_EMP;

/
--------------------------------------------------------
--  DDL for Function CS_TOT_PATIENT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."CS_TOT_PATIENT" ( P_GROUP VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
 BEGIN  
       BEGIN

        SELECT COUNT (0) into v_return_value
               FROM cs_patient a
              WHERE 1 = 1 AND status = 'A' 
                AND group_patient = P_GROUP;

        EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
        END;

        RETURN v_return_value;

END CS_TOT_PATIENT;

/
--------------------------------------------------------
--  DDL for Function CS_TOT_VISIT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."CS_TOT_VISIT" ( P_DATE VARCHAR2, P_PUR VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
BEGIN  

  IF P_PUR = '' OR P_PUR is null THEN

     BEGIN

        SELECT COUNT (0) 
          INTO v_return_value
          FROM cs_visit
         WHERE 1 = 1 
           AND to_char(visit_date,'yyyy-mm-dd')=P_DATE
           AND status='CLS';

        EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
     END;

  ELSE

     BEGIN

        SELECT COUNT (0) 
          INTO v_return_value
          FROM cs_visit 
         WHERE 1 = 1 
           AND to_char(visit_date,'yyyy-mm-dd')=P_DATE
           AND status='CLS'
           AND PURPOSE = P_PUR;

        EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
     END;

  END IF;

  RETURN v_return_value;

END CS_TOT_VISIT;

/
--------------------------------------------------------
--  DDL for Function CS_TOT_WA
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."CS_TOT_WA" ( P_DATE VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
BEGIN  

     BEGIN

        SELECT COUNT (0) 
          INTO v_return_value
          FROM cs_visit 
         WHERE 1 = 1 
           AND to_char(visit_date,'yyyy-mm')=P_DATE
           AND work_accident='Y'
           AND status='CLS';

        EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
     END;

  RETURN v_return_value;

END CS_TOT_WA;

/
--------------------------------------------------------
--  DDL for Function FN_CS_INIT_STOCK
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."FN_CS_INIT_STOCK" ( P_DATE DATE
                                                  , P_MED_CD VARCHAR2) RETURN NUMBER 
IS 
v_return_value NUMBER;
v_check VARCHAR2(1);

 BEGIN  
       BEGIN

        BEGIN
            select stock into v_return_value
            from cs_medicine_stok
            where period=to_char(add_months(P_DATE,-1),'yyyymm')
            and med_cd=P_MED_CD;
        EXCEPTION
            WHEN NO_DATA_FOUND THEN
                 v_check := 'N';
            WHEN OTHERS THEN
                 v_check := 'N';
        END;

        if (v_check = 'N') then

            select nvl(sum(trans_qty),0) trans_qty  into v_return_value
            from cs_medicine_trans
            where trans_type='IN'
            and med_cd=P_MED_CD
            and to_char(trans_date,'yyyymm')=to_char(add_months(P_DATE,-1),'yyyymm');

        end if;

        EXCEPTION
                WHEN OTHERS THEN
                    v_return_value := 0;  
        END;

        RETURN v_return_value;

END FN_CS_INIT_STOCK;

/
--------------------------------------------------------
--  DDL for Function FN_CS_REQ_STOCK
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."FN_CS_REQ_STOCK" ( P_DATE DATE
                                                , P_MED_CD VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
 BEGIN  
       BEGIN


        select nvl(SUM(med_qty),0) into v_return_value
        from cs_receipt
        where insp_date= P_DATE
        and confirm='N'
        and med_cd=P_MED_CD;

        EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
        END;

        RETURN v_return_value;

END FN_CS_REQ_STOCK;

/
--------------------------------------------------------
--  DDL for Function FN_CS_TRX_IN
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."FN_CS_TRX_IN" ( P_DATE DATE
                                                  , P_MED_CD VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
 BEGIN  
       BEGIN


        select nvl(sum(trans_qty),0) into v_return_value
        from cs_medicine_trans
        where trans_type='IN'
        and med_cd=P_MED_CD
        and to_char(trans_date,'yyyymm')=to_char(P_DATE,'yyyymm');

        EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
        END;

        RETURN v_return_value;

END FN_CS_TRX_IN;

/
--------------------------------------------------------
--  DDL for Function FN_CS_TRX_OUT
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "KLINIK"."FN_CS_TRX_OUT" ( P_DATE DATE
                                                  , P_MED_CD VARCHAR2) RETURN NUMBER 
IS v_return_value NUMBER;
 BEGIN  
       BEGIN


        select nvl(sum(trans_qty),0) into v_return_value
        from cs_medicine_trans
        where trans_type='OUT'
        and med_cd=P_MED_CD
        and to_char(trans_date,'yyyymm')=to_char(P_DATE,'yyyymm');

        EXCEPTION
        WHEN OTHERS THEN
                    v_return_value := 0;  
        END;

        RETURN v_return_value;

END FN_CS_TRX_OUT;

/
--------------------------------------------------------
--  Constraints for Table CS_ADD_INFO
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_ADD_INFO" MODIFY ("POLI_CD" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_ADD_INFO" MODIFY ("INFO_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_SICK_LETER
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_SICK_LETER" MODIFY ("INSP_DATE" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_SICK_LETER" MODIFY ("RM_NO" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_SICK_LETER" MODIFY ("LETTER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_VISIT
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_VISIT" ADD CONSTRAINT "CS_VISIT_U01" UNIQUE ("EMPID", "VISIT_DATE", "QUE01")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "KLINIK"."CS_VISIT" MODIFY ("VISIT_DATE" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_VISIT" MODIFY ("EMPID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_MEDICINE
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_MEDICINE" MODIFY ("MED_NAME" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_MEDICINE" MODIFY ("MED_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_DIAGNOSA_CATEGORY
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_DIAGNOSA_CATEGORY" MODIFY ("CAT_NAME" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_DIAGNOSA_CATEGORY" MODIFY ("CAT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_DIAGNOSA
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_DIAGNOSA" MODIFY ("INSP_DATE" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_DIAGNOSA" MODIFY ("RM_NO" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_DIAGNOSA" MODIFY ("DIAGNOSA_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_DIAGNOSA_ITEM
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_DIAGNOSA_ITEM" ADD CONSTRAINT "CS_DIAGNOSA_ITEM_U01" UNIQUE ("ITEM_CD")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "KLINIK"."CS_DIAGNOSA_ITEM" MODIFY ("ITEM_NAME" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_DIAGNOSA_ITEM" MODIFY ("ITEM_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_REFER
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_REFER" MODIFY ("INSP_DATE" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_REFER" MODIFY ("RM_NO" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_REFER" MODIFY ("REFER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_POLICLINIC
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_POLICLINIC" MODIFY ("POLI_NAME" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_POLICLINIC" MODIFY ("POLI_CD" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_ROOM
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_ROOM" MODIFY ("BED_QTY" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_ROOM" MODIFY ("ROOM_NAME" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_ROOM" MODIFY ("ROOM_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_PATIENT
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_PATIENT" ADD CONSTRAINT "CS_PATIENT_U01" UNIQUE ("EMPID", "GROUP_PATIENT", "STATUS")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "KLINIK"."CS_PATIENT" MODIFY ("EMPID" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_PATIENT" MODIFY ("RM_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_RECOMMENDATION
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_RECOMMENDATION" MODIFY ("INSP_DATE" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_RECOMMENDATION" MODIFY ("RM_NO" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_RECOMMENDATION" MODIFY ("RECOM_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_OBSERVATION
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_OBSERVATION" MODIFY ("INSP_DATE" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_OBSERVATION" MODIFY ("RM_NO" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_OBSERVATION" MODIFY ("OBS_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_EMPLOYEES
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_EMPLOYEES" MODIFY ("EMPID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_ACTION
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_ACTION" MODIFY ("INSP_DATE" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_ACTION" MODIFY ("RM_NO" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_ACTION" MODIFY ("ACT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_AUDIOMETRI
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_AUDIOMETRI" MODIFY ("EMPID" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_AUDIOMETRI" MODIFY ("MCU_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_RECEIPT
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_RECEIPT" MODIFY ("INSP_DATE" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_RECEIPT" MODIFY ("RM_NO" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_RECEIPT" MODIFY ("RECEIPT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_MCU
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_MCU" MODIFY ("EMPID" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_MCU" MODIFY ("MCU_NO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_ANAMNESA
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_ANAMNESA" MODIFY ("INSP_DATE" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_ANAMNESA" MODIFY ("RM_NO" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_ANAMNESA" MODIFY ("ANAMNESA_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_MEDICINE_TRANS
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_MEDICINE_TRANS" MODIFY ("TRANS_TYPE" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_MEDICINE_TRANS" MODIFY ("MED_CD" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_MEDICINE_TRANS" MODIFY ("TRANS_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_BIRTH_CERTIFICATE
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_BIRTH_CERTIFICATE" MODIFY ("INSP_DATE" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_BIRTH_CERTIFICATE" MODIFY ("RM_NO" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_BIRTH_CERTIFICATE" MODIFY ("CER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_SICK_LETER_ITEM
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_SICK_LETER_ITEM" MODIFY ("ITEM_NAME" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_SICK_LETER_ITEM" MODIFY ("ITEM_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table CS_USER
--------------------------------------------------------

  ALTER TABLE "KLINIK"."CS_USER" MODIFY ("STATUS" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_USER" MODIFY ("USER_ROLE" NOT NULL ENABLE);
  ALTER TABLE "KLINIK"."CS_USER" MODIFY ("EMPID" NOT NULL ENABLE);
